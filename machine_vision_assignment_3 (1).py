# -*- coding: utf-8 -*-
"""Machine Vision Assignment 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mrtGU4Itu6EPQFDY0eoaWZ1fJnYVCZDe
"""

from PIL import Image
import os
import numpy as np
import matplotlib.pyplot as plt
import torch as torch
import torchvision.transforms.functional
import cv2 as cv

MorphImage = Image.open("morphology.png")

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
import torch
import torchvision.transforms.functional

MorphImage = Image.open("morphology.png")
plt.imshow(MorphImage, cmap = 'gray', vmin = 0, vmax = 255)
plt.show()

MorphArray = np.asarray(MorphImage)
MorphArrayOG = np.asarray(MorphImage)

MorphTensor = torch.tensor(MorphArray)
assert MorphImage is not None, "file could not read, check with os.path.exists()"
kernel = np.ones((5,5), np.uint8)
erosion = cv.erode(MorphArray, kernel, iterations = 1)
plt.imshow(erosion, cmap = 'gray', vmin = 0, vmax = 255)
plt.show()
#erosion is the first transformation

closing = cv.morphologyEx(MorphArray, cv.MORPH_CLOSE, kernel)
plt.imshow(closing, cmap = 'gray', vmin = 0, vmax = 255)
plt.show()
#closing is the second transformation





opening = cv.morphologyEx(MorphArrayOG, cv.MORPH_OPEN, kernel)
plt.imshow(opening, cmap = 'gray', vmin = 0, vmax = 255)
plt.show()

morphology = cv.morphologyEx(MorphArrayOG, cv.MORPH_GRADIENT, kernel)
plt.imshow(morphology, cmap = 'gray', vmin = 0, vmax = 255)
plt.show()

median = cv.medianBlur(MorphArrayOG, 5)
plt.imshow(median, cmap = 'gray', vmin = 0, vmax = 255)
plt.show()